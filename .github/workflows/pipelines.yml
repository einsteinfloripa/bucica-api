name: Pipelines

on:
  pull_request:
    branches:
      - main
      - develop

jobs:
  lint_code:
    name: Pylint in Code
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.2.2

      - name: Install dependencies
        run: poetry install

      - name: Lint with pylint
        run: poetry run pylint --rcfile=.pylintrc --output-format=colorized --fail-under=7 -r=y src

  tests:
    name: Run tests
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        test_type: [unit, integration]
    env:
      DB_URL: "sqlite:///test.db"
      ADMIN_USERNAME: admin
      ADMIN_PASSWORD: admin

    steps:
      - uses: actions/checkout@v3

      - name: Setup Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.2.2

      - name: Install dependencies
        run: poetry install

      - name: Run ${{ matrix.test_type }} tests
        run: poetry run pytest -m ${{ matrix.test_type }}

  deploy-production:
    if: ${{ github.head_ref == 'main' }}
    name: Deploy to Hostinger (Production)
    needs: [tests]
    environment:
      name: Production
      url: https://api.einsteinfloripa.com.br
    runs-on: self-hosted
    steps:
      - name: Checkout in branch ${{ github.ref_name }}
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Make env file
        uses: SpicyPizza/create-envfile@v1.3
        with:
          envkey_PORT: ${{ vars.PORT }}
          envkey_POSTGRES_USER: ${{ vars.POSTGRES_USER }}
          envkey_POSTGRES_PASSWORD: ${{ vars.POSTGRES_PASSWORD }}
          envkey_POSTGRES_DB: ${{ vars.POSTGRES_DB }}
          envkey_POSTGRES_HOST: bucica-postgres-db-production
          envkey_DB_PORT: ${{ vars.DB_PORT }}
          envkey_DB_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:5432/${POSTGRES_DB}
          envkey_ADMIN_USERNAME: ${{ vars.ADMIN_USERNAME }}
          envkey_ADMIN_PASSWORD: ${{ vars.ADMIN_PASSWORD }}
          file_name: .env.production
          fail_on_empty: true

      - name: Deploy to Hostinger
        run: |
          make deploy-production
          make deploy-nginx

  deploy-staging:
    name: Deploy to Hostinger (Staging)
    needs: [tests]
    runs-on: self-hosted
    # environment:
    #   name: Staging
    #   url: https://staging-api.einsteinfloripa.com.br

    steps:
      - name: Checkout in branch ${{ github.ref_name }}
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Make env file
        uses: SpicyPizza/create-envfile@v1.3
        with:
          envkey_PORT: ${{ vars.PORT }}
          envkey_POSTGRES_USER: ${{ vars.POSTGRES_USER }}
          envkey_POSTGRES_PASSWORD: ${{ vars.POSTGRES_PASSWORD }}
          envkey_POSTGRES_DB: ${{ vars.POSTGRES_DB }}
          envkey_POSTGRES_HOST: bucica-postgres-db-staging
          envkey_DB_PORT: ${{ vars.DB_PORT }}
          envkey_DB_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:5432/${POSTGRES_DB}
          envkey_ADMIN_USERNAME: ${{ vars.ADMIN_USERNAME }}
          envkey_ADMIN_PASSWORD: ${{ vars.ADMIN_PASSWORD }}
          file_name: .env.staging
          fail_on_empty: true

      - name: Print branch name
        run: echo ${{ github.head_ref }}

      # - name: Deploy to Hostingero
      #   run: |
      #     make deploy-staging
      #     make deploy-nginx
